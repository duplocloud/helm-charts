{{- if .Values.grafanaUI.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-ui
  namespace: {{ $.Release.Namespace }}
spec:
  replicas: {{ .Values.grafanaUI.replicas }}
  selector:
    matchLabels:
      app: grafana-ui
  template:
    metadata:
      labels:
        app: grafana-ui
      annotations:
        k8s_grafana_com_scrape: "true"
        k8s_grafana_com_job: "grafana-metrics"
        k8s_grafana_com_metrics_path: "/metrics"
        k8s_grafana_com_metrics_portNumber: "3000"
    spec:
      containers:
        - name: grafana-ui
          image: "{{ .Values.grafanaUI.image }}:{{ .Values.grafanaUI.imageTag }}"
          ports:
            - containerPort: 3000
          env:
            - name: GF_INSTALL_PLUGINS
              value: {{ .Values.grafanaUI.plugins | quote }}
            - name: GF_SERVER_ROOT_URL
              value: "{{ .Values.global.grafanaProxyUrl }}"
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: grafanaui
                  key: username
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafanaui
                  key: password
          resources:
            {{- toYaml .Values.grafanaUI.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/grafana
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: grafana-ui-data
---
{{- end }}
{{- if .Values.duploAutomation.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: duplo-automation
  namespace: {{ $.Release.Namespace }}
spec:
  replicas: {{ .Values.duploAutomation.replicas }}
  selector:
    matchLabels:
      app: duplo-automation
  template:
    metadata:
      labels:
        app: duplo-automation
    spec:
      containers:
        - name: duplo-automation
          image: "{{ .Values.duploAutomation.image }}:{{ .Values.duploAutomation.imageTag }}"
          ports:
            - containerPort: 5000
          env:
            - name: GRR_GRAFANA_URL
              value: "http://grafana-ui:3000"
            - name: GRR_GRAFANA_TOKEN
              valueFrom:
                secretKeyRef:
                  name: grafanaui
                  key: password
            - name: GRR_GRAFANA_USER
              valueFrom:
                secretKeyRef:
                  name: grafanaui
                  key: username
            - name: GRR_MIMIR_ADDRESS
              value: "http://duplo-metrics-ruler:8080"
            - name: GRR_MIMIR_TENANT_ID
              value: "anonymous"
            - name: GRR_TARGETS
              value: "Datasource,DashboardFolder,LibraryElement,Dashboard,AlertRuleGroup,AlertNotificationPolicy,AlertContactPoint,PrometheusRuleGroup"
            - name: GRR_OUTPUT_FORMAT
              value: "yaml"
            - name: GRR_ONLY_SPEC
              value: "false"
            - name: GRIZZLY_HTTP_TIMEOUT
              value: "60"
          volumeMounts:
            - name: data
              mountPath: /app/data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: duplo-automation-data
---
{{- end }}
{{- if .Values.grafanaProxy.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-proxy
  namespace: {{ $.Release.Namespace }}
spec:
  replicas: {{ .Values.grafanaProxy.replicas }}
  selector:
    matchLabels:
      app: grafana-proxy
  template:
    metadata:
      labels:
        app: grafana-proxy
    spec:
      containers:
        - name: grafana-proxy
          image: "{{ .Values.grafanaProxy.image }}:{{ .Values.grafanaProxy.imageTag }}"
          ports:
            - containerPort: 80
          env:
            - name: DUPLO_AUTH_URL
              value: {{ .Values.global.duploAuthUrl | quote }}
            - name: BACKEND_URL
              value: "http://grafana-ui:3000"
            - name: CUSTOM_HEADER_ADD
              value: "proxy_set_header X-WEBAUTH-USER duplocloud;"
          resources:
            {{- toYaml .Values.grafanaProxy.resources | nindent 12 }}
{{- end }} 