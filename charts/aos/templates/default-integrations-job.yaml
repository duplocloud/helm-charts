{{- if .Values.integrationJob.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: integration-duplo-upgrade
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  backoffLimit: 0
  template:
    spec:
      containers:
        - name: init-duplo
          image: "{{ .Values.integrationJob.image }}:{{ .Values.integrationJob.imageTag }}"
          command:
            - /bin/sh
            - '-c'
            - |
              echo "Waiting for $DUPLO_AUTOMATION_DEPLOYMENT_NAME to be ready..."
              until curl --silent --fail --output /dev/null $DUPLO_AUTOMATION_ENDPOINT; do
                echo "Waiting for $DUPLO_AUTOMATION_ENDPOINT to be ready..."
                sleep 10
              done
              echo "Triggering Duplo automation integration..."
              INTEGRATIONS="apm linuxnode kubernetes slo aws-cloudwatch mimir loki tempo duplo-common"
              if [ "{{ .Values.global.cloud }}" == "aws" ]; then
                INTEGRATIONS="$INTEGRATIONS aws-cloudwatch"
              fi
              for i in $INTEGRATIONS; do
                echo "Enabling $i"
                if ! curl --fail --silent --show-error --location "$DUPLO_AUTOMATION_ENDPOINT/enable-integration" \
                  --header "Content-Type:application/json" \
                  --data-raw "{\"integration_name\":\"$i\",\"context_name\":\"duplo-otel\"}"; then
                  echo " Failed to enable $i. Continuing with next integration."
                fi
              done
              echo "âœ… Duplo default provisioning completed successfully."
          env:
            - name: DUPLO_AUTOMATION_DEPLOYMENT_NAME
              value: "duplo-automation"
            - name: DUPLO_AUTOMATION_ENDPOINT
              value: "http://duplo-automation:5000"
      serviceAccountName: {{ .Release.Namespace }}-edit-user
      restartPolicy: Never
{{- if .Values.integrationJob.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.integrationJob.nodeSelector | indent 8 }}
{{- end }} 
{{- end }} 