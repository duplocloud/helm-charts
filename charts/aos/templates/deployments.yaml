{{- if .Values.grafanaProxy.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-proxy
  namespace: {{ $.Release.Namespace }}
spec:
  replicas: {{ .Values.grafanaProxy.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: grafana-proxy
  template:
    metadata:
      labels:
        app: grafana-proxy
    spec:
      containers:
        - name: grafana-proxy
          image: "{{ .Values.grafanaProxy.image }}:{{ .Values.grafanaProxy.imageTag }}"
          ports:
            - name: proxy
              containerPort: 80
              protocol: TCP
          env:
            - name: DUPLO_AUTH_URL
              value: {{ .Values.global.duploAuthUrl | quote }}
            - name: BACKEND_URL
              value: "http://grafana-ui:3000"
            - name: CUSTOM_HEADER_ADD
              value: "proxy_set_header X-WEBAUTH-USER duplocloud;"
          readinessProbe:
            httpGet:
              path: /duplo_auth
              port: 80
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /duplo_auth
              port: 80
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          resources:
{{- toYaml .Values.grafanaProxy.resources | nindent 12 }}
{{- if .Values.grafanaProxy.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.grafanaProxy.nodeSelector | indent 8 }}
{{- end }}
---
{{- end }}

{{- if .Values.pdc.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana-pdc-agent
    name: grafana-pdc-agent
  name: grafana-pdc-agent
  namespace: {{ $.Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      name: grafana-pdc-agent
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: grafana-pdc-agent
    spec:
      containers:
      - name: grafana-pdc-agent
        env:
        - name: TOKEN
          valueFrom:
            secretKeyRef:
              key: token
              name: grafana-pdc-agent
        - name: CLUSTER
          valueFrom:
            secretKeyRef:
              key: cluster
              name: grafana-pdc-agent
        - name: HOSTED_GRAFANA_ID
          valueFrom:
            secretKeyRef:
              key: hosted-grafana-id
              name: grafana-pdc-agent
        args:
        - -cluster
        - $(CLUSTER)
        - -token
        - $(TOKEN)
        - -gcloud-hosted-grafana-id
        - "$(HOSTED_GRAFANA_ID)"
        image: grafana/pdc-agent:latest
        imagePullPolicy: Always
        resources:
        {{- toYaml .Values.pdc.resources | nindent 10 }}
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          runAsNonRoot: true
          capabilities:
            drop:
              - all
      securityContext:
        runAsUser: 30000
        runAsGroup: 30000
        fsGroup: 30000
      {{- if .Values.pdc.nodeSelector }}
      nodeSelector:
      {{ toYaml .Values.pdc.nodeSelector | indent 8 }}
      {{- end }}
---
{{- end }}